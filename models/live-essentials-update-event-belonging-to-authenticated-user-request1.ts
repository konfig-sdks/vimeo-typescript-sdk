/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1Embed } from './live-essentials-update-event-belonging-to-authenticated-user-request1-embed';
import { LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1InteractionToolsSettings } from './live-essentials-update-event-belonging-to-authenticated-user-request1-interaction-tools-settings';
import { LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1Schedule } from './live-essentials-update-event-belonging-to-authenticated-user-request1-schedule';
import { LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamEmbed } from './live-essentials-update-event-belonging-to-authenticated-user-request1-stream-embed';
import { LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamPrivacy } from './live-essentials-update-event-belonging-to-authenticated-user-request1-stream-privacy';

/**
 * 
 * @export
 * @interface LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
 */
export interface LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1 {
    /**
     * The title of the event. If **automatically_title_stream** is `true`, this value is the base title for videos created by streaming to this event.
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'title'?: string;
    /**
     * Whether automated closed captions are enabled for the event.
     * @type {boolean}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'auto_cc_enabled'?: boolean;
    /**
     * A comma-separated list of keywords for enhancing the speech detection of automated closed captions.
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'auto_cc_keywords'?: string;
    /**
     * The language of the automated closed captions.  Option descriptions:  * `de-DE` - The language is German.  * `en-US` - The language is English.  * `es-ES` - The language is Spanish.  * `fr-FR` - The language is French.  * `pt-BR` - The language is Portuguese. 
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'auto_cc_language'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1AutoCcLanguageEnum;
    /**
     * Whether the title for the next video in the event is generated based on the time of the stream and the **title** field of the event.
     * @type {boolean}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'automatically_title_stream'?: boolean;
    /**
     * Whether to display the live chat client on the Vimeo event page.
     * @type {boolean}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'chat_enabled'?: boolean;
    /**
     * A list of values describing the content in this event. To return the list of all possible content rating values, use the [`/contentratings`](https://developer.vimeo.com/api/reference/videos#get_content_ratings) endpoint.
     * @type {Array<string>}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'content_rating'?: Array<string>;
    /**
     * Whether the DVR feature is enabled.
     * @type {boolean}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'dvr'?: boolean;
    /**
     * 
     * @type {LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1Embed}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'embed'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1Embed;
    /**
     * 
     * @type {LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1InteractionToolsSettings}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'interaction_tools_settings'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1InteractionToolsSettings;
    /**
     * The order in which the videos of the event appear within the event\'s playlist.  Option descriptions:  * `added_first` - The most recently added videos appear first.  * `added_last` - The most recently added videos appear last.  * `alphabetical` - The videos appear in alphabetical order.  * `arranged` - The videos appear in the order in which the user has arranged them.  * `comments` - The videos appear in order of number of comments.  * `duration` - The videos appear in order of duration.  * `likes` - The videos appear in order of number of likes.  * `newest` - The newest videos appear first.  * `oldest` - The oldest videos appear first.  * `plays` - The videos appear in order of number of plays. 
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'playlist_sort'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1PlaylistSortEnum;
    /**
     * 
     * @type {LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1Schedule}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'schedule'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1Schedule;
    /**
     * Whether the scheduled playback feature is enabled.
     * @type {boolean}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'scheduled_playback'?: boolean;
    /**
     * The description of the next video to be streamed to the event.
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'stream_description'?: string;
    /**
     * 
     * @type {LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamEmbed}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'stream_embed'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamEmbed;
    /**
     * The stream mode of the event.  Option descriptions:  * `live` - The stream is live playback.  * `record` - The stream is in record mode.  * `simulive` - The stream is scheduled media playback. 
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'stream_mode'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamModeEnum;
    /**
     * The password when **stream_privacy.view** is `password`. Anyone with the password can view the videos generated by streaming to the event.
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'stream_password'?: string;
    /**
     * 
     * @type {LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamPrivacy}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'stream_privacy'?: LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamPrivacy;
    /**
     * The title of the next video to be streamed to the event. This parameter is required when **automatically_title_stream** is `false`.
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'stream_title'?: string;
    /**
     * The time zone used in resolving the timestamps that are included in automatically generated video titles.
     * @type {string}
     * @memberof LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1
     */
    'time_zone'?: string;
}

type LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1AutoCcLanguageEnum = 'de-DE' | 'en-US' | 'es-ES' | 'fr-FR' | 'pt-BR'
type LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1PlaylistSortEnum = 'added_first' | 'added_last' | 'alphabetical' | 'arranged' | 'comments' | 'duration' | 'likes' | 'newest' | 'oldest' | 'plays'
type LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest1StreamModeEnum = 'live' | 'record' | 'simulive'


