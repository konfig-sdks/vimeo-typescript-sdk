/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * The video\'s upload information.
 * @export
 * @interface VideoUpload
 */
export interface VideoUpload {
    /**
     * The approach for uploading the video.  Option descriptions:  * `post` - The video upload uses the POST approach.  * `pull` - The video upload uses the pull approach.  * `tus` - The video upload uses the tus approach. 
     * @type {string}
     * @memberof VideoUpload
     */
    'approach'?: VideoUploadApproachEnum;
    /**
     * The HTML form for uploading a video through the POST approach.
     * @type {string}
     * @memberof VideoUpload
     */
    'form'?: string;
    /**
     * The ID of the Google Cloud Storage upload.
     * @type {string}
     * @memberof VideoUpload
     */
    'gcs_uid'?: string;
    /**
     * The link of the video to capture through the pull approach.
     * @type {string}
     * @memberof VideoUpload
     */
    'link'?: string;
    /**
     * The redirect URL for the upload app.
     * @type {string}
     * @memberof VideoUpload
     */
    'redirect_url'?: string;
    /**
     * The file size in bytes of the uploaded video.
     * @type {number}
     * @memberof VideoUpload
     */
    'size'?: number;
    /**
     * The status code for the availability of the uploaded video.  Option descriptions:  * `complete` - The upload is complete.  * `error` - The upload ended with an error.  * `in_progress` - The upload is underway. 
     * @type {string}
     * @memberof VideoUpload
     */
    'status': VideoUploadStatusEnum;
    /**
     * The link for sending video file data.
     * @type {string}
     * @memberof VideoUpload
     */
    'upload_link'?: string;
}

type VideoUploadApproachEnum = 'post' | 'pull' | 'tus'
type VideoUploadStatusEnum = 'complete' | 'error' | 'in_progress'


