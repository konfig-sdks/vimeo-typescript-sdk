/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ProjectMetadataConnectionsAncestorPathInner } from './project-metadata-connections-ancestor-path-inner';
import { ProjectMetadataConnectionsDataRetention } from './project-metadata-connections-data-retention';
import { ProjectMetadataConnectionsFolders } from './project-metadata-connections-folders';
import { ProjectMetadataConnectionsGroupFolderGrants } from './project-metadata-connections-group-folder-grants';
import { ProjectMetadataConnectionsItems } from './project-metadata-connections-items';
import { ProjectMetadataConnectionsParentFolder } from './project-metadata-connections-parent-folder';
import { ProjectMetadataConnectionsPersonalTeamFolderOwner } from './project-metadata-connections-personal-team-folder-owner';
import { ProjectMetadataConnectionsResourceCreatorTeamUser } from './project-metadata-connections-resource-creator-team-user';
import { ProjectMetadataConnectionsTeamPermissions } from './project-metadata-connections-team-permissions';
import { ProjectMetadataConnectionsUserFolderAccessGrants } from './project-metadata-connections-user-folder-access-grants';
import { ProjectMetadataConnectionsVideos } from './project-metadata-connections-videos';

/**
 * A list of resource URIs related to the folder.
 * @export
 * @interface ProjectMetadataConnections
 */
export interface ProjectMetadataConnections {
    /**
     * Information about the folder\'s ancestry ordered from the direct parent to higher-level ancestors.
     * @type {Array<ProjectMetadataConnectionsAncestorPathInner>}
     * @memberof ProjectMetadataConnections
     */
    'ancestor_path': Array<ProjectMetadataConnectionsAncestorPathInner>;
    /**
     * 
     * @type {ProjectMetadataConnectionsDataRetention}
     * @memberof ProjectMetadataConnections
     */
    'data_retention': ProjectMetadataConnectionsDataRetention;
    /**
     * 
     * @type {ProjectMetadataConnectionsFolders}
     * @memberof ProjectMetadataConnections
     */
    'folders': ProjectMetadataConnectionsFolders;
    /**
     * 
     * @type {ProjectMetadataConnectionsGroupFolderGrants}
     * @memberof ProjectMetadataConnections
     */
    'group_folder_grants': ProjectMetadataConnectionsGroupFolderGrants;
    /**
     * 
     * @type {ProjectMetadataConnectionsItems}
     * @memberof ProjectMetadataConnections
     */
    'items': ProjectMetadataConnectionsItems;
    /**
     * 
     * @type {ProjectMetadataConnectionsParentFolder}
     * @memberof ProjectMetadataConnections
     */
    'parent_folder': ProjectMetadataConnectionsParentFolder;
    /**
     * 
     * @type {ProjectMetadataConnectionsPersonalTeamFolderOwner}
     * @memberof ProjectMetadataConnections
     */
    'personal_team_folder_owner': ProjectMetadataConnectionsPersonalTeamFolderOwner;
    /**
     * 
     * @type {ProjectMetadataConnectionsResourceCreatorTeamUser}
     * @memberof ProjectMetadataConnections
     */
    'resource_creator_team_user': ProjectMetadataConnectionsResourceCreatorTeamUser;
    /**
     * 
     * @type {ProjectMetadataConnectionsTeamPermissions}
     * @memberof ProjectMetadataConnections
     */
    'team_permissions': ProjectMetadataConnectionsTeamPermissions;
    /**
     * 
     * @type {ProjectMetadataConnectionsUserFolderAccessGrants}
     * @memberof ProjectMetadataConnections
     */
    'user_folder_access_grants': ProjectMetadataConnectionsUserFolderAccessGrants;
    /**
     * 
     * @type {ProjectMetadataConnectionsVideos}
     * @memberof ProjectMetadataConnections
     */
    'videos': ProjectMetadataConnectionsVideos;
}

