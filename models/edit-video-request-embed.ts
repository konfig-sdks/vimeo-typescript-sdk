/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EditVideoRequestEmbedButtons } from './edit-video-request-embed-buttons';
import { EditVideoRequestEmbedCardsInner } from './edit-video-request-embed-cards-inner';
import { EditVideoRequestEmbedLogos } from './edit-video-request-embed-logos';
import { EmbedPresetsEssentialsCreatePresetRequestEmbedPlayButton } from './embed-presets-essentials-create-preset-request-embed-play-button';
import { EmbedPresetsEssentialsCreatePresetRequestEmbedTitle } from './embed-presets-essentials-create-preset-request-embed-title';
import { VideosUploadsBeginVideoUploadProcessRequestEmbedEndScreen } from './videos-uploads-begin-video-upload-process-request-embed-end-screen';

/**
 * 
 * @export
 * @interface EditVideoRequestEmbed
 */
export interface EditVideoRequestEmbed {
    /**
     * 
     * @type {EmbedPresetsEssentialsCreatePresetRequestEmbedTitle}
     * @memberof EditVideoRequestEmbed
     */
    'title'?: EmbedPresetsEssentialsCreatePresetRequestEmbedTitle;
    /**
     * Whether AirPlay is enabled in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'airplay'?: boolean;
    /**
     * Whether multiple audio tracks can appear in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'audio_tracks'?: boolean;
    /**
     * 
     * @type {EditVideoRequestEmbedButtons}
     * @memberof EditVideoRequestEmbed
     */
    'buttons'?: EditVideoRequestEmbedButtons;
    /**
     * A collection of cards associated with the selected video.
     * @type {Array<EditVideoRequestEmbedCardsInner>}
     * @memberof EditVideoRequestEmbed
     */
    'cards'?: Array<EditVideoRequestEmbedCardsInner>;
    /**
     * Whether chapters are enabled in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'chapters'?: boolean;
    /**
     * Whether the Chromecast button appears in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'chromecast'?: boolean;
    /**
     * Whether closed captions are enabled in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'closed_captions'?: boolean;
    /**
     * The main color of the embeddable player.
     * @type {string}
     * @memberof EditVideoRequestEmbed
     */
    'color'?: string;
    /**
     * 
     * @type {VideosUploadsBeginVideoUploadProcessRequestEmbedEndScreen}
     * @memberof EditVideoRequestEmbed
     */
    'end_screen'?: VideosUploadsBeginVideoUploadProcessRequestEmbedEndScreen;
    /**
     * 
     * @type {EditVideoRequestEmbedLogos}
     * @memberof EditVideoRequestEmbed
     */
    'logos'?: EditVideoRequestEmbedLogos;
    /**
     * 
     * @type {EmbedPresetsEssentialsCreatePresetRequestEmbedPlayButton}
     * @memberof EditVideoRequestEmbed
     */
    'play_button'?: EmbedPresetsEssentialsCreatePresetRequestEmbedPlayButton;
    /**
     * Whether to show the playbar on the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'playbar'?: boolean;
    /**
     * Whether to show the quality selector in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'quality_selector'?: boolean;
    /**
     * Whether the transcript controls appear in the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'transcript'?: boolean;
    /**
     * Whether to show the volume selector on the embeddable player.
     * @type {boolean}
     * @memberof EditVideoRequestEmbed
     */
    'volume'?: boolean;
}

