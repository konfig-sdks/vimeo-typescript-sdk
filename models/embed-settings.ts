/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EmailCaptureForm } from './email-capture-form';
import { EmbedSettingsBadges } from './embed-settings-badges';
import { EmbedSettingsButtons } from './embed-settings-buttons';
import { EmbedSettingsCardsInner } from './embed-settings-cards-inner';
import { EmbedSettingsColors } from './embed-settings-colors';
import { EmbedSettingsEndScreen } from './embed-settings-end-screen';
import { EmbedSettingsLogos } from './embed-settings-logos';
import { EmbedSettingsPlayButton } from './embed-settings-play-button';
import { EmbedSettingsTitle } from './embed-settings-title';

/**
 * 
 * @export
 * @interface EmbedSettings
 */
export interface EmbedSettings {
    /**
     * 
     * @type {EmbedSettingsTitle}
     * @memberof EmbedSettings
     */
    'title': EmbedSettingsTitle;
    /**
     * Whether AirPlay is enabled in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'airplay': boolean;
    /**
     * Whether multiple audio tracks can appear in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'audio_tracks': boolean;
    /**
     * Whether automatic picture-in-picture is enabled.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'autopip': boolean;
    /**
     * 
     * @type {EmbedSettingsBadges}
     * @memberof EmbedSettings
     */
    'badges': EmbedSettingsBadges;
    /**
     * 
     * @type {EmbedSettingsButtons}
     * @memberof EmbedSettings
     */
    'buttons': EmbedSettingsButtons;
    /**
     * A collection of cards associated with the selected video.
     * @type {Array<EmbedSettingsCardsInner>}
     * @memberof EmbedSettings
     */
    'cards': Array<EmbedSettingsCardsInner>;
    /**
     * Whether chapters are enabled in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'chapters': boolean;
    /**
     * Whether the Chromecast button appears in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'chromecast': boolean;
    /**
     * Whether closed captions are enabled in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'closed_captions': boolean;
    /**
     * The first player color, which controls the color of the progress bar, buttons, and more.
     * @type {string}
     * @memberof EmbedSettings
     */
    'color': string;
    /**
     * 
     * @type {EmbedSettingsColors}
     * @memberof EmbedSettings
     */
    'colors': EmbedSettingsColors;
    /**
     * The email capture form settings associated with the video.
     * @type {EmailCaptureForm}
     * @memberof EmbedSettings
     */
    'email_capture_form': EmailCaptureForm;
    /**
     * 
     * @type {EmbedSettingsEndScreen}
     * @memberof EmbedSettings
     */
    'end_screen': EmbedSettingsEndScreen;
    /**
     * Whether the embedded player should display the event schedule.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'event_schedule': boolean;
    /**
     * Whether the video has cards.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'has_cards': boolean;
    /**
     * The HTML code for embedding the video on a web page.
     * @type {string}
     * @memberof EmbedSettings
     */
    'html'?: string;
    /**
     * Whether the video is an interactive video.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'interactive': boolean;
    /**
     * 
     * @type {EmbedSettingsLogos}
     * @memberof EmbedSettings
     */
    'logos': EmbedSettingsLogos;
    /**
     * The type of the video outro.  Option descriptions:  * `beginning` - The outro is a thumbnail.  * `custom` - The outro is custom.  * `email` - The outro is an email form.  * `image` - The outro is an image.  * `link` - The outro is a link.  * `loop` - The outro is a loop.  * `nothing` - There is no outro.  * `share` - The outro is a share button.  * `text` - The outro is text.  * `threevideos` - The outro is three video suggestions.  * `videos` - The outro is video suggestions. 
     * @type {string}
     * @memberof EmbedSettings
     */
    'outro_type': EmbedSettingsOutroTypeEnum;
    /**
     * Whether picture-in-picture is enabled and the button appears in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'pip': boolean;
    /**
     * 
     * @type {EmbedSettingsPlayButton}
     * @memberof EmbedSettings
     */
    'play_button': EmbedSettingsPlayButton;
    /**
     * Whether the playbar appears in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'playbar': boolean;
    /**
     * Whether the quality selector appears in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'quality_selector': boolean;
    /**
     * Whether the embedded player should display the schedule timezone.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'show_timezone': boolean;
    /**
     * Whether the speed controls appear in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'speed': boolean;
    /**
     * Whether the transcript controls appear in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'transcript': boolean;
    /**
     * The URI of the embed preset.
     * @type {string}
     * @memberof EmbedSettings
     */
    'uri'?: string;
    /**
     * Whether the volume controls appear in the embeddable player.
     * @type {boolean}
     * @memberof EmbedSettings
     */
    'volume': boolean;
}

type EmbedSettingsOutroTypeEnum = 'beginning' | 'custom' | 'email' | 'image' | 'link' | 'loop' | 'nothing' | 'share' | 'text' | 'threevideos' | 'videos'


