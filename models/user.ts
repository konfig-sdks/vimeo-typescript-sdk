/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Location } from './location';
import { Picture } from './picture';
import { Skill } from './skill';
import { UserMetadata } from './user-metadata';
import { UserPreferences } from './user-preferences';
import { UserUploadQuota } from './user-upload-quota';
import { UserWebsitesInner } from './user-websites-inner';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * The authenticated user\'s account type.  Option descriptions:  * `advanced` - The user has a Vimeo Advanced subscription.  * `basic` - The user has a Vimeo Basic subscription.  * `business` - The user has a Vimeo Business subscription.  * `enterprise` - The user has a Vimeo Enterprise subscription.  * `free` - The user has a Vimeo Free subscription.  * `live_business` - The user has a Vimeo Business Live subscription.  * `live_premium` - The user has a Vimeo Premium subscription.  * `live_pro` - The user has a Vimeo PRO Live subscription.  * `plus` - The user has a Vimeo Plus subscription.  * `pro` - The user has a Vimeo Pro subscription.  * `pro_unlimited` - The user has a Vimeo PRO Unlimited subscription.  * `producer` - The user has a Vimeo Producer subscription.  * `standard` - The user has a Vimeo Standard subscription.  * `starter` - The user has a Vimeo Starter subscription. 
     * @type {string}
     * @memberof User
     */
    'account': UserAccountEnum;
    /**
     * Whether the authenticated user is available for hire.
     * @type {boolean}
     * @memberof User
     */
    'available_for_hire': boolean;
    /**
     * The authenticated user\'s long bio text.
     * @type {string}
     * @memberof User
     */
    'bio': string | null;
    /**
     * Whether the authenticated user can work remotely.
     * @type {boolean}
     * @memberof User
     */
    'can_work_remotely': boolean;
    /**
     * The users\'s capabilities list.
     * @type {object}
     * @memberof User
     */
    'capabilities': object;
    /**
     * The comma-separated list of clients.
     * @type {string}
     * @memberof User
     */
    'clients': string;
    /**
     * The authenticated user\'s content filters.  Option descriptions:  * `drugs` - The content contains drug or alcohol use.  * `language` - The content contains profanity or sexually suggestive language.  * `nudity` - The content contains nudity.  * `safe` - The content is suitable for all audiences.  * `unrated` - The content hasn\'t been rated.  * `violence` - The content contains violence or is graphic. 
     * @type {Array<string>}
     * @memberof User
     */
    'content_filter'?: UserContentFilterEnum;
    /**
     * The time in ISO 8601 format when the user account was created.
     * @type {string}
     * @memberof User
     */
    'created_time': string;
    /**
     * The authenticated user\'s gender.
     * @type {string}
     * @memberof User
     */
    'gender': string | null;
    /**
     * Whether the user\'s email is invalid.
     * @type {boolean}
     * @memberof User
     */
    'has_invalid_email': boolean;
    /**
     * Whether the creator enrolled in and successfully completed the Vimeo Experts program.
     * @type {boolean}
     * @memberof User
     */
    'is_expert': boolean;
    /**
     * The absolute URL of the authenticated users\'s profile page.
     * @type {string}
     * @memberof User
     */
    'link': string;
    /**
     * The authenticated user\'s location.
     * @type {string}
     * @memberof User
     */
    'location': string | null;
    /**
     * The authenticated user\'s location details.
     * @type {Location}
     * @memberof User
     */
    'location_details': Location;
    /**
     * 
     * @type {UserMetadata}
     * @memberof User
     */
    'metadata': UserMetadata;
    /**
     * The authenticated user\'s display name.
     * @type {string}
     * @memberof User
     */
    'name': string;
    /**
     * The active portrait of the authenticated user.
     * @type {Picture}
     * @memberof User
     */
    'pictures': Picture;
    /**
     * 
     * @type {UserPreferences}
     * @memberof User
     */
    'preferences': UserPreferences;
    /**
     * The authenticated user\'s resource key string.
     * @type {string}
     * @memberof User
     */
    'resource_key': string;
    /**
     * The authenticated user\'s short bio text.
     * @type {string}
     * @memberof User
     */
    'short_bio': string | null;
    /**
     * A list of the authenticated user\'s skills.
     * @type {Array<Skill>}
     * @memberof User
     */
    'skills': Array<Skill> | null;
    /**
     * 
     * @type {UserUploadQuota}
     * @memberof User
     */
    'upload_quota': UserUploadQuota;
    /**
     * The authenticated user\'s canonical relative URI.
     * @type {string}
     * @memberof User
     */
    'uri': string;
    /**
     * The authenticated user\'s websites.
     * @type {Array<UserWebsitesInner>}
     * @memberof User
     */
    'websites': Array<UserWebsitesInner>;
}

type UserAccountEnum = 'advanced' | 'basic' | 'business' | 'enterprise' | 'free' | 'live_business' | 'live_premium' | 'live_pro' | 'plus' | 'pro' | 'pro_unlimited' | 'producer' | 'standard' | 'starter'
type UserContentFilterEnum = 


