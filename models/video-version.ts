/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

The version of the OpenAPI document: 3.4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ApiApp } from './api-app';
import { Play } from './play';
import { User } from './user';
import { VideoVersionMetadata } from './video-version-metadata';
import { VideoVersionTranscode } from './video-version-transcode';
import { VideoVersionUpload } from './video-version-upload';

/**
 * 
 * @export
 * @interface VideoVersion
 */
export interface VideoVersion {
    /**
     * A description of the video version. This description can make use of the full unicode character set. This field appears in the response only when a corresponding value is present.
     * @type {string}
     * @memberof VideoVersion
     */
    'description'?: string;
    /**
     * Whether the video version is currently active.
     * @type {boolean}
     * @memberof VideoVersion
     */
    'active': boolean;
    /**
     * The API app associated with the video version.
     * @type {ApiApp}
     * @memberof VideoVersion
     */
    'app': ApiApp;
    /**
     * Whether the version can be restored.
     * @type {boolean}
     * @memberof VideoVersion
     */
    'can_restore_create': boolean;
    /**
     * The storyboard ID of the video version.
     * @type {string}
     * @memberof VideoVersion
     */
    'create_storyboard_id': string;
    /**
     * The time in ISO 8601 format when the video version was created.
     * @type {string}
     * @memberof VideoVersion
     */
    'created_time': string;
    /**
     * The download config associated with the version.
     * @type {object}
     * @memberof VideoVersion
     */
    'download_config': object;
    /**
     * The duration in seconds of the video version.
     * @type {number}
     * @memberof VideoVersion
     */
    'duration': number | null;
    /**
     * The file name of the video version.
     * @type {string}
     * @memberof VideoVersion
     */
    'filename': string;
    /**
     * The size in byes of the video version file.
     * @type {number}
     * @memberof VideoVersion
     */
    'filesize': number | null;
    /**
     * Whether the video has interactive capability.
     * @type {boolean}
     * @memberof VideoVersion
     */
    'has_interactive': boolean;
    /**
     * 
     * @type {VideoVersionMetadata}
     * @memberof VideoVersion
     */
    'metadata': VideoVersionMetadata;
    /**
     * The time in ISO 8601 format when the video version was last modified.
     * @type {string}
     * @memberof VideoVersion
     */
    'modified_time': string;
    /**
     * Whether the video has unified resolution. If the value of this field is `false`, the video requires transcoding.
     * @type {boolean}
     * @memberof VideoVersion
     */
    'origin_variable_frame_resolution': boolean;
    /**
     * The `Play` representation.
     * @type {Play}
     * @memberof VideoVersion
     */
    'play'?: Play;
    /**
     * 
     * @type {VideoVersionTranscode}
     * @memberof VideoVersion
     */
    'transcode': VideoVersionTranscode | null;
    /**
     * 
     * @type {VideoVersionUpload}
     * @memberof VideoVersion
     */
    'upload': VideoVersionUpload | null;
    /**
     * The time in ISO 8601 format when the video version was uploaded.
     * @type {string}
     * @memberof VideoVersion
     */
    'upload_date': string | null;
    /**
     * The version\'s canonical relative URI.
     * @type {string}
     * @memberof VideoVersion
     */
    'uri': string;
    /**
     * The owner of the video version.
     * @type {User}
     * @memberof VideoVersion
     */
    'user': User;
}

